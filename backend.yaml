- name : configureing the backend module 
  hosts: backend
  become: yes 
  vars:
    login_host: db.78skedar.online
    mysql_password: ExpenseApp@1 

  gather_facts: true 
  tasks:  
    - name: disabling the nodejs18 
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable the nodejs 20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install the nodejs
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present 
      loop:
        - nodejs 
        - mysql

    - name: add user expense 
      ansible.builtin.user:
        name: expense
        state: present
    
    - name: create /app directory 
      ansible.builtin.file:
        path: /app
        state: directory 

    - name: downlode the backend code 
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip 

    - name: unzip the code 
      ansible.builtin.unarchive:
        src: /tmp/backend.zip 
        dest: /app
        remote_src: yes

    - name: downlode the npm dependenciess 
      ansible.builtin.command: npm install 
      args:
        chdir: /app

    - name: copy the backend service 
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service.

    - name: install the python-mysql connecting dependencies
      ansible.builtin.pip:
        name: 
          - PyMySQL
          - cryptography
        executable: pip3.9

    - name: load the schema data 
      community.mysql.mysql_db:
        login_user: root 
        login_password: "{{ mysql_password }}"
        login_host: "{{ login_host }}"
        target: /app/schema/backend.sql
        state: import 
        name: all

    - name: backend daemon reload 
      ansible.builtin.systemd:
        daemon_reload: yes  


    - name: start and enable the backend 
      ansible.builtin.service:
        name: backend
        state: restarted
        enabled: yes 


 